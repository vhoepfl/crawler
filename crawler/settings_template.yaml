general: 
  delay: 0 # Wartezeit zwischen Aufrufen

metadata: 
  date: 
    use_fallback_method: True # Falls kein Datum im HTML-head gefunden: Erstes Datum im Websitentext verwendet
    element: meta 
    attrib: name
    name: date
    # Beispiel: 
    # hmtl: <meta property="article:modified_time" content="2024-04-02T16:09:32+00:00">
    # element:meta, attrib:property, name:article:published_time -> content gets extracted

  title: 
    element: meta
    attrib: property
    name: og:title

  volume: 
    extract_volume: True # Jedes volume aus Titel (nicht Text) extrahiert

text_extraction: 
  only_paragraphs: True # Text nur extrahiert aus <p>-tags (paragraphs) 
  specific_tags: # Text nur extrahiert aus diesen spezifischen tags (überschreibt only_paragraphs)
    element: Null
    attrib: Null
    # Example: 
    # element: article - for <article id="post-1882" class="post_item_single post_type_post post_format_ post-1882 post type-post s
    # attrib: article-iliade - for the following html: </div><div id="article-iliade" class="et_pb_module et_pb_text et_pb_text_2  et_pb_text_align_left et_pb_bg_layout_light"> [article]

output: 
  console: 
    verbose: True # Gibt während des crawlen zusätzliche Infos aus
    print_one_per: 1 # Gibt bei einer von n Websiten Infos aus
  file: # Filteroptionen - deaktivieren mit -1
    percentage_limit: -1 # [1-100]: Jede Seite, auf der ein niedrigerer Prozentsatz an Text extrahiert wird, wird ignoriert
    word_count_limit: 150 # Gesamtzahl der Wörter pro Seite: Jede Seite mit weniger extrahierten Wörtern wird ignoriert
    mean_line_lenght_limit: 20 # Durchschnittliche Zahl an Wörtern pro (Text-)Zeile: Seite ignoriert, falls darunter